

context.html
<Context >
	<Resource name="jdbc/emp" 
			  auth="Container"
              type="javax.sql.DataSource" 
              driverClassName="org.postgresql.Driver"
              url="jdbc:postgresql://localhost:5432/postgres"
              username="postgres" 
              password="Welcome@123" 
              maxTotal="20" 
              maxIdle="10"
              maxWaitMillis="-1" />
</Context>

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<script src="js/jquery-2.1.1.js" type="text/javascript"></script> 
<script type="text/javascript"> 
$(document).ready(function(){ 
    var xmlhttp; 
    var urls="deptfetch" 
    if (window.XMLHttpRequest) 
    { 
         xmlhttp=new XMLHttpRequest(); 
    } 
    else 
    { 
        xmlhttp=new ActiveXObject("Microsoft.XMLHTTP"); 
    } 
    xmlhttp.onreadystatechange=function() 
   { 
      z=0; 
      removeall(); 
     if (xmlhttp.readyState==4) 
    { 
         var roott=xmlhttp.responseXML.documentElement; 
         var ress=roott.getElementsByTagName("deptNo")[z].childNodes[0].nodeValue; 
         while(ress!=null) 
            { 
                addoptions(ress) 
                z++ 
                var ress=roott.getElementsByTagName("deptNo")[z].childNodes[0].nodeValue; 
          } 
     } 
   function removeall() 
    { 
        var ct=document.dummy.sele2.length; 
        for(i=ct; i>=0; i--)    {     
            document.dummy.sele2.options[i]=null; 
             } 
    } 
    function addoptions(reslt) 
    { 
       var ct1=document.createElement("OPTION"); 
       ct1.text=reslt; 
       ct1.value=reslt; 
       document.dummy.sele2.options.add(ct1); 
    } 
 }    //onreadystatechnge function end 
xmlhttp.open("POST",urls,true); 
xmlhttp.send(); 
}); 
</script> 
</head>
<body>
<h2> Add New Employee </h2> 
<form action="getempid" method="post"> 
	<table cellspacing="5"> 
	<tr><td>Employee Id </td><td><input type="number" name="empId" readonly="readonly"></td>
	<td><input type="submit" value="New"></td></tr> 
	</table>
</form>
<form name="dummy"> 
DeptNo:    <select name="sele2"> 
            <option>--choose--</option> 
           </select> 
+</form> 
<form action="addemp" method="post"> 
	<table cellspacing="5"> 	
	<tr><td>Dept name</td><td><input type="text" name="deptName"></td></tr> 
	<tr><td>EmpName</td><td><input type="text" name="empName"></td></tr> 
	<tr><td>Employee Salary</td><td><input type="number" name="salary"></td></tr> 
	<tr><td>Designation</td><td><input type="text" name="design"></td></tr> 
	<tr><td><input type="submit" value="Save"></td></tr> 
	</table> 
</form> 
  </BODY>
</HTML>
 
 
AddEmpServlet.java
package com.htc.emp;

import java.io.IOException; 
import java.io.PrintWriter; 
import java.util.Arrays; 
import javax.servlet.ServletException; 
import javax.servlet.annotation.WebServlet; 
import javax.servlet.http.HttpServlet; 
import javax.servlet.http.HttpServletRequest; 
import javax.servlet.http.HttpServletResponse;

@WebServlet("/addemp") 
public class AddEmpServlet extends HttpServlet { 
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { 
		PrintWriter pw = response.getWriter(); 
		response.setContentType("text/html"); 
		int empId = Integer.parseInt(request.getParameter("empId"));
		String empName = request.getParameter("empName"); 
		double salary = Double.parseDouble(request.getParameter("salary")); 
		String design = request.getParameter("design");
		String deptNo = request.getParameter("deptNo");
		EmpService service = new EmpService(); 
		boolean status = service.addEmp(empId, empName, salary, design, deptNo); 
		if(status) { 
			pw.println("<h2> Employee Successfully Added</h2>"); 
		} 
		else { 
			pw.println("<h2> Employee add failed </h2>"); 
		} 
		pw.close(); 
	} 
} 

GetEmpIdServlet.java
package com.htc.emp;

import java.io.IOException; 
import java.io.PrintWriter; 
import java.util.Arrays;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException; 
import javax.servlet.annotation.WebServlet; 
import javax.servlet.http.HttpServlet; 
import javax.servlet.http.HttpServletRequest; 
import javax.servlet.http.HttpServletResponse;

@WebServlet("/getempid") 
public class GetEmpIdServlet extends HttpServlet { 
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { 
		PrintWriter pw = response.getWriter(); 
		response.setContentType("text/html"); 
		EmpService service = new EmpService(); 
		int empid = service.getEmpId(); 
		pw.println(empid);
 		request.setAttribute("empId", empid);
		RequestDispatcher rd = request.getRequestDispatcher("index.jsp");
		rd.forward(request, response);
	} 
} 

package com.htc.emp;
import java.io.IOException; 
import java.io.PrintWriter; 
import java.sql.Connection; 
import java.sql.DriverManager; 
import java.sql.ResultSet; 
import java.sql.Statement;

import javax.naming.InitialContext;
import javax.servlet.ServletException; 
import javax.servlet.annotation.WebServlet; 
import javax.servlet.http.HttpServlet; 
import javax.servlet.http.HttpServletRequest; 
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource; 
@WebServlet("/deptfetch") 
public class DeptFetchServlet extends HttpServlet { 
   public DeptFetchServlet() { 
	   	super(); 
   }
   protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { 
	   
   		}
	   protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException { 
		   Connection con=null; 
		   Statement st=null; 
		   ResultSet rs=null; 
		   response.setContentType("text/xml");         
		   PrintWriter out=response.getWriter(); 
		   try 
		   	{ 
			   InitialContext context = new InitialContext(); 
			   DataSource ds = (DataSource)context.lookup("java:comp/env/jdbc/dept"); 
		   	   Class.forName("org.postgresql.Driver"); 
			   st=con.createStatement(); 
			   rs = st.executeQuery("select deptNo from dept"); 

			 out.println("<dept>"); 
			 while(rs.next()) 
			 {                             
             			out.println("<deptNo>"+rs.getString(1)+"</deptNo>"); 
			 } 
			 out.println("</dept>"); 
		 }  
		 catch(Exception ex) 
		 { 
			 ex.printStackTrace(); 
		 } 
} 
} 

DeptDTO.java
package com.htc.emp;

import java.io.Serializable;
public class DeptDTO implements Serializable {
	private String deptNo;
	private String deptName;
	public DeptDTO(String deptNo, String deptName) {
		super();
		this.deptNo = deptNo;
		this.deptName = deptName;
	}
	public String getDeptNo() {
		return deptNo;
	}
	public void setDeptNo(String deptNo) {
		this.deptNo = deptNo;
	}
	public String getDeptName() {
		return deptName;
	}
	public void setDeptName(String deptName) {
		this.deptName = deptName;
	}
	
	
}

EmpDAO.java

package com.htc.emp;

import java.sql.SQLException; 

public interface EmpDAO { 
	public boolean addEmp(int empid, String empName, double Salary, String design, String deptNo) throws SQLException; 
	public int getEmpId() throws SQLException; 
} 

EmpDAOImpl.java

package com.htc.emp;

import java.sql.Connection; 
import java.sql.PreparedStatement; 
import java.sql.ResultSet; 
import java.sql.SQLException; 
import javax.naming.InitialContext; 
import javax.naming.NamingException; 
import javax.sql.DataSource; 

public class EmpDAOImpl implements EmpDAO{ 
	@Override 
	public boolean addEmp(int empId, String empName, double salary, String design, String deptNo) throws SQLException { 
		Connection con = null; 
		boolean status = false; 
		try { 
			System.out.println("empDAOIMP");
			InitialContext context = new InitialContext(); 
			DataSource ds = (DataSource)context.lookup("java:comp/env/jdbc/emp"); 
			System.out.println("DataSource : " + ds);
			con = ds.getConnection(); 
			PreparedStatement pst = con.prepareStatement("insert into emp values(?,?,?,?,?)"); 
			pst.setInt(1, empId); 
			pst.setString(2, empName); 
			pst.setDouble(3, salary); 
			pst.setString(4, design);
			pst.setString(5, deptNo);
			int result = pst.executeUpdate(); 
			if(result>0)  
				status = true; 
		} catch (NamingException e) { 
			// TODO Auto-generated catch block 
			e.printStackTrace(); 
		} 
		finally { 
			con.close(); 
		} 
		return status; 
	} 
	@Override 
	public int getEmpId() throws SQLException { 
		Connection con = null; 
		int maxEmpId=0;
		try { 
			InitialContext context = new InitialContext(); 
			DataSource ds = (DataSource)context.lookup("java:comp/env/jdbc/emp"); 
			con = ds.getConnection(); 
			PreparedStatement pst = con.prepareStatement("select max(empId) from emp"); 
			maxEmpId = pst.executeUpdate(); 
			System.out.println("MaxEmpId Returned : " + maxEmpId);
		} catch (NullPointerException e) { 
			e.printStackTrace(); 
		} catch (NamingException e) { 
			e.printStackTrace(); 
		} 
		finally { 
			con.close(); 
		} 
		return maxEmpId;	 
	} 
} 

EmpDTO.java
package com.htc.emp;

import java.io.Serializable;
public class EmpDTO implements Serializable {
		private int empId; 
		private String empName; 
		private double salary; 
		private String design;
		private String deptNo;
		
		public EmpDTO() {
			this.empId = 0;
			this.empName = " ";
			this.salary = 0.0;
			this.design = " ";
			this.deptNo = " ";
		}

		public EmpDTO(int empId, String empName, double salary, String design, String deptNo) {
			super();
			this.empId = empId;
			this.empName = empName;
			this.salary = salary;
			this.design = design;
			this.deptNo = deptNo;
		}

		public int getEmpId() {
			return empId;
		}

		public void setEmpId(int empId) {
			this.empId = empId;
		}

		public String getEmpName() {
			return empName;
		}

		public void setEmpName(String empName) {
			this.empName = empName;
		}

		public double getSalary() {
			return salary;
		}

		public void setSalary(double salary) {
			this.salary = salary;
		}

		public String getDesign() {
			return design;
		}

		public void setDesign(String design) {
			this.design = design;
		}

		public String getDeptNo() {
			return deptNo;
		}

		public void setDeptNo(String deptNo) {
			this.deptNo = deptNo;
		}
}

EmpService.java

package com.htc.emp;

import java.sql.SQLException; 

public class EmpService { 
	public boolean addEmp(int empId, String empName, double salary, String design, String deptNo) { 
		EmpDAO empdao = new EmpDAOImpl(); 
		boolean status = false; 
		try { 
			status = empdao.addEmp(empId, empName, salary, design, deptNo); 
		} catch (SQLException e) { 
			e.printStackTrace(); 
		} 
		return status; 
	} 
	public int getEmpId() { 
		EmpDAO empdao = new EmpDAOImpl(); 
		int maxEmpId = 0; 
		
		try { 
			maxEmpId = empdao.getEmpId(); 
		} catch (SQLException e) { 
			e.printStackTrace(); 
		} 
		return maxEmpId; 
	} 
} 